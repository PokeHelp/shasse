
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.6.0
 * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
 */
Prisma.prismaVersion = {
  client: "6.6.0",
  engine: "f676762280b54cd07c770017ed3711ddde35f37a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.LangueScalarFieldEnum = {
  id: 'id',
  name: 'name',
  isoCode: 'isoCode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.TranslationScalarFieldEnum = {
  langueId: 'langueId',
  referenceId: 'referenceId',
  referenceTable: 'referenceTable',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  discordId: 'discordId',
  email: 'email',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status',
  pseudonym: 'pseudonym',
  role: 'role'
};

exports.Prisma.Shiny_hunting_methodScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Shiny_huntingScalarFieldEnum = {
  id: 'id',
  methodId: 'methodId',
  meetingNumber: 'meetingNumber',
  time: 'time',
  isFinish: 'isFinish',
  useCharmChroma: 'useCharmChroma',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.PokeballScalarFieldEnum = {
  id: 'id',
  picture: 'picture',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.GenerationScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.GameScalarFieldEnum = {
  id: 'id',
  generationId: 'generationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Game_group_gameScalarFieldEnum = {
  gameId: 'gameId',
  groupGameId: 'groupGameId',
  landId: 'landId'
};

exports.Prisma.Group_gameScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Capsule_game_capacity_infoScalarFieldEnum = {
  capacityInfoId: 'capacityInfoId',
  capsuleId: 'capsuleId',
  groupeGameId: 'groupeGameId'
};

exports.Prisma.Pokemon_categoryScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.PokemonScalarFieldEnum = {
  id: 'id',
  internationalNumber: 'internationalNumber',
  hatchingCycle: 'hatchingCycle',
  globalXp: 'globalXp',
  captureRate: 'captureRate',
  callHelpRate: 'callHelpRate',
  size: 'size',
  weight: 'weight',
  maleRate: 'maleRate',
  femelleRate: 'femelleRate',
  pokemonCategoryId: 'pokemonCategoryId',
  generationId: 'generationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.GenderScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.FormScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Pokemon_form_genderScalarFieldEnum = {
  pokemonFormId: 'pokemonFormId',
  genderId: 'genderId'
};

exports.Prisma.Pokemon_formScalarFieldEnum = {
  pokemonId: 'pokemonId',
  formId: 'formId',
  createdAt: 'createdAt',
  id: 'id',
  status: 'status',
  updatedAt: 'updatedAt'
};

exports.Prisma.Owned_pokemonScalarFieldEnum = {
  id: 'id',
  shinyHuntingId: 'shinyHuntingId',
  userId: 'userId',
  pokemonId: 'pokemonId',
  gameId: 'gameId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Owned_pokemon_detailScalarFieldEnum = {
  id: 'id',
  nickname: 'nickname',
  isShiny: 'isShiny',
  pokeballId: 'pokeballId',
  ownedPokemonId: 'ownedPokemonId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.AbilityScalarFieldEnum = {
  id: 'id',
  appearanceGenerationId: 'appearanceGenerationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Ability_infoScalarFieldEnum = {
  id: 'id',
  generationId: 'generationId',
  abilityId: 'abilityId',
  effectOutsideFightId: 'effectOutsideFightId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Pokemon_infoScalarFieldEnum = {
  id: 'id',
  xpGift: 'xpGift',
  generationId: 'generationId',
  pokemonId: 'pokemonId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Ability_orderScalarFieldEnum = {
  pokemonInfoId: 'pokemonInfoId',
  abilityId: 'abilityId',
  order: 'order',
  isHidden: 'isHidden'
};

exports.Prisma.Evolution_methodScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.EvolutionScalarFieldEnum = {
  id: 'id',
  level: 'level',
  evolutionMethodId: 'evolutionMethodId',
  pokemonFormStartId: 'pokemonFormStartId',
  pokemonFormEndId: 'pokemonFormEndId',
  evolutionInfoId: 'evolutionInfoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Evolution_infoScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Egg_groupScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Egg_group_orderScalarFieldEnum = {
  pokemonInfoId: 'pokemonInfoId',
  eggGroupId: 'eggGroupId',
  order: 'order'
};

exports.Prisma.TypeScalarFieldEnum = {
  id: 'id',
  color: 'color',
  iconName: 'iconName',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Type_orderScalarFieldEnum = {
  typeId: 'typeId',
  pokemonInfoId: 'pokemonInfoId',
  order: 'order'
};

exports.Prisma.National_numberScalarFieldEnum = {
  groupGameId: 'groupGameId',
  pokemonId: 'pokemonId',
  number: 'number'
};

exports.Prisma.LandScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.CapacityScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Capacity_effectScalarFieldEnum = {
  id: 'id',
  zEffect: 'zEffect',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Capacity_categoryScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.CapsuleScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.DetailScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Effect_outside_fightScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.InfluenceScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.LocationScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.ZoneScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Location_zoneScalarFieldEnum = {
  id: 'id',
  locationId: 'locationId',
  zoneId: 'zoneId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.MeteoScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Pokemon_obtationScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.RateScalarFieldEnum = {
  id: 'id',
  rate: 'rate',
  minLevel: 'minLevel',
  maxLevel: 'maxLevel',
  limit: 'limit',
  meteoId: 'meteoId',
  detailRateId: 'detailRateId',
  conditionRateId: 'conditionRateId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status',
  isAlpha: 'isAlpha'
};

exports.Prisma.Shiny_hunting_method_gameScalarFieldEnum = {
  shinyHuntingMethodId: 'shinyHuntingMethodId',
  groupGameId: 'groupGameId'
};

exports.Prisma.Shiny_hunting_method_rateScalarFieldEnum = {
  shinyHuntingMethodId: 'shinyHuntingMethodId',
  rateId: 'rateId'
};

exports.Prisma.Skill_obtation_typeScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.StatisticScalarFieldEnum = {
  id: 'id',
  pv: 'pv',
  attack: 'attack',
  defense: 'defense',
  specialAttack: 'specialAttack',
  specialDefense: 'specialDefense',
  special: 'special',
  speed: 'speed',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Statistic_group_gameScalarFieldEnum = {
  groupGameId: 'groupGameId',
  pokemonId: 'pokemonId',
  statisticId: 'statisticId'
};

exports.Prisma.TargetScalarFieldEnum = {
  id: 'id',
  isMultiple: 'isMultiple',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Capacity_infoScalarFieldEnum = {
  id: 'id',
  power: 'power',
  dynamaxPower: 'dynamaxPower',
  precision: 'precision',
  pp: 'pp',
  hasBacklash: 'hasBacklash',
  targetId: 'targetId',
  capacityEffectId: 'capacityEffectId',
  capacityId: 'capacityId',
  capacityEffectZId: 'capacityEffectZId',
  typeId: 'typeId',
  effectOutsideFightId: 'effectOutsideFightId',
  capacityCategoryId: 'capacityCategoryId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  status: 'status'
};

exports.Prisma.Capacity_info_influenceScalarFieldEnum = {
  capacityInfoId: 'capacityInfoId',
  influenceId: 'influenceId'
};

exports.Prisma.Pokemon_game_locationScalarFieldEnum = {
  gameId: 'gameId',
  rateId: 'rateId',
  locationZoneId: 'locationZoneId',
  pokemonObtationId: 'pokemonObtationId',
  pokemonFormId: 'pokemonFormId',
  id: 'id'
};

exports.Prisma.Skill_obtationScalarFieldEnum = {
  capacityId: 'capacityId',
  pokemonId: 'pokemonId',
  groupGameId: 'groupGameId',
  skillObtationTypeId: 'skillObtationTypeId',
  detail: 'detail'
};

exports.Prisma.Refresh_tokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  expiresAt: 'expiresAt'
};

exports.Prisma.Vw_translation_typeScalarFieldEnum = {
  id: 'id',
  langue_id: 'langue_id',
  name: 'name',
  status: 'status'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.langueOrderByRelevanceFieldEnum = {
  name: 'name',
  isoCode: 'isoCode',
  status: 'status'
};

exports.Prisma.translationOrderByRelevanceFieldEnum = {
  name: 'name',
  status: 'status'
};

exports.Prisma.userOrderByRelevanceFieldEnum = {
  email: 'email',
  password: 'password',
  status: 'status',
  pseudonym: 'pseudonym'
};

exports.Prisma.shiny_hunting_methodOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.shiny_huntingOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.pokeballOrderByRelevanceFieldEnum = {
  picture: 'picture',
  status: 'status'
};

exports.Prisma.generationOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.gameOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.group_gameOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.pokemon_categoryOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.pokemonOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.genderOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.formOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.pokemon_formOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.owned_pokemonOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.owned_pokemon_detailOrderByRelevanceFieldEnum = {
  nickname: 'nickname',
  status: 'status'
};

exports.Prisma.abilityOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.ability_infoOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.pokemon_infoOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.evolution_methodOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.evolutionOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.evolution_infoOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.egg_groupOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.typeOrderByRelevanceFieldEnum = {
  color: 'color',
  iconName: 'iconName',
  status: 'status'
};

exports.Prisma.landOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.capacityOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.capacity_effectOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.capacity_categoryOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.capsuleOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.detailOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.effect_outside_fightOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.influenceOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.locationOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.zoneOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.location_zoneOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.meteoOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.pokemon_obtationOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.rateOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.skill_obtation_typeOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.statisticOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.targetOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.capacity_infoOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.skill_obtationOrderByRelevanceFieldEnum = {
  detail: 'detail'
};

exports.Prisma.refresh_tokenOrderByRelevanceFieldEnum = {
  token: 'token'
};

exports.Prisma.vw_translation_typeOrderByRelevanceFieldEnum = {
  name: 'name',
  status: 'status'
};
exports.reference_table = exports.$Enums.reference_table = {
  TYPE: 'TYPE',
  POKEMON_CATEGORY: 'POKEMON_CATEGORY',
  GAME: 'GAME',
  POKEMON: 'POKEMON',
  CAPACITY: 'CAPACITY',
  CATEGORY_CAPACITY: 'CATEGORY_CAPACITY',
  INFLUENCE: 'INFLUENCE',
  SKILL_OBTENTION_TYPE: 'SKILL_OBTENTION_TYPE',
  CAPSULE: 'CAPSULE',
  EFFECT_OUTSIDE_FIGHT: 'EFFECT_OUTSIDE_FIGHT',
  CAPACITY_EFFECT: 'CAPACITY_EFFECT',
  TARGET: 'TARGET',
  POKEMON_OBTENTION: 'POKEMON_OBTENTION',
  METEO: 'METEO',
  SHINY_HUNTING_METHOD: 'SHINY_HUNTING_METHOD',
  DETAIL: 'DETAIL',
  POKEBALL: 'POKEBALL',
  EGG_GROUP: 'EGG_GROUP',
  EVOLUTION_METHOD: 'EVOLUTION_METHOD',
  ZONE: 'ZONE',
  LOCATION: 'LOCATION',
  LAND: 'LAND',
  EVOLUTION_INFO: 'EVOLUTION_INFO',
  ABILITY: 'ABILITY',
  GROUP_GAME: 'GROUP_GAME',
  FORM: 'FORM',
  GENDER: 'GENDER'
};

exports.role = exports.$Enums.role = {
  PUBLIC: 'PUBLIC',
  ADMIN: 'ADMIN',
  SUPER_ADMIN: 'SUPER_ADMIN'
};

exports.Prisma.ModelName = {
  langue: 'langue',
  translation: 'translation',
  user: 'user',
  shiny_hunting_method: 'shiny_hunting_method',
  shiny_hunting: 'shiny_hunting',
  pokeball: 'pokeball',
  generation: 'generation',
  game: 'game',
  game_group_game: 'game_group_game',
  group_game: 'group_game',
  capsule_game_capacity_info: 'capsule_game_capacity_info',
  pokemon_category: 'pokemon_category',
  pokemon: 'pokemon',
  gender: 'gender',
  form: 'form',
  pokemon_form_gender: 'pokemon_form_gender',
  pokemon_form: 'pokemon_form',
  owned_pokemon: 'owned_pokemon',
  owned_pokemon_detail: 'owned_pokemon_detail',
  ability: 'ability',
  ability_info: 'ability_info',
  pokemon_info: 'pokemon_info',
  ability_order: 'ability_order',
  evolution_method: 'evolution_method',
  evolution: 'evolution',
  evolution_info: 'evolution_info',
  egg_group: 'egg_group',
  egg_group_order: 'egg_group_order',
  type: 'type',
  type_order: 'type_order',
  national_number: 'national_number',
  land: 'land',
  capacity: 'capacity',
  capacity_effect: 'capacity_effect',
  capacity_category: 'capacity_category',
  capsule: 'capsule',
  detail: 'detail',
  effect_outside_fight: 'effect_outside_fight',
  influence: 'influence',
  location: 'location',
  zone: 'zone',
  location_zone: 'location_zone',
  meteo: 'meteo',
  pokemon_obtation: 'pokemon_obtation',
  rate: 'rate',
  shiny_hunting_method_game: 'shiny_hunting_method_game',
  shiny_hunting_method_rate: 'shiny_hunting_method_rate',
  skill_obtation_type: 'skill_obtation_type',
  statistic: 'statistic',
  statistic_group_game: 'statistic_group_game',
  target: 'target',
  capacity_info: 'capacity_info',
  capacity_info_influence: 'capacity_info_influence',
  pokemon_game_location: 'pokemon_game_location',
  skill_obtation: 'skill_obtation',
  refresh_token: 'refresh_token',
  vw_translation_type: 'vw_translation_type'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
