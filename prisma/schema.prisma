generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model langue {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  name      String    @db.VarChar(100)
  isoCode   String    @map("iso_code") @db.Char(2)
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  status    String    @default("on") @db.VarChar(45)
  users     user[]
}

model translate {
  langueId       Int             @map("langue_id") @db.UnsignedInt
  referenceId    BigInt          @map("reference_id") @db.UnsignedBigInt
  referenceTable reference_table @map("reference_table")
  name           String          @db.Text
  createdAt      DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status         String          @default("on") @db.VarChar(45)

  @@id([referenceTable, referenceId, langueId])
}

model user {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  discordId     BigInt?         @map("discord_id") @db.UnsignedBigInt
  email         String          @unique @db.VarChar(255)
  username      String          @db.VarChar(100)
  password      String          @db.VarChar(255)
  lastConnexion DateTime        @map("last_connexion") @db.DateTime(0)
  langueId      Int             @map("langue_id") @db.UnsignedInt
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status        String          @default("on") @db.VarChar(45)
  ownedPokemons owned_pokemon[]
  roleUsers     role_user[]
  langues       langue          @relation(fields: [langueId], references: [id])

  @@index([langueId], map: "user_langue_id_fkey")
}

model role {
  id          Int         @id @default(autoincrement()) @db.UnsignedInt
  name        String      @db.VarChar(45)
  levelAccess Int         @map("level_access")
  createdAt   DateTime    @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt   DateTime?   @updatedAt @map("updated_at") @db.DateTime(0)
  status      String      @default("on") @db.VarChar(45)
  roleUsers   role_user[]
}

model role_user {
  roleId Int  @map("role_id") @db.UnsignedInt
  userId Int  @map("user_id") @db.UnsignedInt
  role   role @relation(fields: [roleId], references: [id])
  user   user @relation(fields: [userId], references: [id])

  @@id([roleId, userId])
  @@index([userId], map: "role_user_user_id_fkey")
}

model shasse_method {
  id                Int                  @id @default(autoincrement()) @db.UnsignedInt
  createdAt         DateTime             @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt         DateTime?            @updatedAt @map("updated_at") @db.DateTime(0)
  status            String               @default("on") @db.VarChar(45)
  shasses           shasse[]
  shasseMethodGames shasse_method_game[]
  shasseMethodRates shasse_method_rate[]
}

model shasse {
  id             BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  methodId       Int             @map("method_id") @db.UnsignedInt
  meetingNumber  Int             @map("meeting_number") @db.UnsignedInt
  time           DateTime        @db.Time(0)
  isFinish       Boolean         @map("is_finish")
  useCharmChroma Boolean         @map("use_charm_chroma")
  createdAt      DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status         String          @default("on") @db.VarChar(45)
  ownedPokemons  owned_pokemon[]
  shasse_method  shasse_method   @relation(fields: [methodId], references: [id])

  @@index([methodId], map: "shasse_method_id_fkey")
}

model pokeball {
  id                  Int                    @id @default(autoincrement()) @db.UnsignedInt
  picture             String                 @db.VarChar(45)
  createdAt           DateTime               @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt           DateTime?              @updatedAt @map("updated_at") @db.DateTime(0)
  status              String                 @default("on") @db.VarChar(45)
  ownedPokemonDetails owned_pokemon_detail[]
}

model generation {
  id           Int            @id @default(autoincrement()) @db.UnsignedInt
  number       Int
  createdAt    DateTime       @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt    DateTime?      @updatedAt @map("updated_at") @db.DateTime(0)
  status       String         @default("on") @db.VarChar(45)
  abilities    ability[]
  abilityInfos ability_info[]
  games        game[]
  pokemons     pokemon[]
  pokemonInfos pokemon_info[]
}

model game {
  id                    Int                      @id @default(autoincrement()) @db.UnsignedInt
  generationId          Int                      @map("generation_id") @db.UnsignedInt
  createdAt             DateTime                 @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt             DateTime?                @updatedAt @map("updated_at") @db.DateTime(0)
  status                String                   @default("on") @db.VarChar(45)
  capacityInfos         capacity_info[]
  generation            generation               @relation(fields: [generationId], references: [id])
  nationnalNumbers      nationnal_number[]
  ownedPokemons         owned_pokemon[]
  pokemonRatingGames    pokemon_rating_game[]
  shasseMethodGames     shasse_method_game[]
  skillObtations        skill_obtation[]
  statistiqueGroupGames statistique_group_game[]

  @@index([generationId], map: "game_generation_id_fkey")
}

model pokemon_category {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  status    String    @default("on") @db.VarChar(45)
  pokemons  pokemon[]
}

model pokemon {
  id                    Int                      @id @default(autoincrement()) @db.UnsignedInt
  internationnalNumber  Int                      @map("internationnal_number")
  hatchingCycle         Int                      @map("hatching_cycle")
  globalXp              Int                      @map("global_xp")
  captureRate           Int                      @map("capture_rate")
  callHelpRate          Int                      @map("call_help_rate")
  size                  Decimal                  @db.Decimal(5, 2)
  weight                Decimal                  @db.Decimal(5, 2)
  maleRate              Decimal                  @map("male_rate") @db.Decimal(5, 2)
  femelleRate           Decimal                  @map("femelle_rate") @db.Decimal(5, 2)
  pokemonCategoryId     Int                      @map("category_id") @db.UnsignedInt
  generationId          Int                      @map("generation_id") @db.UnsignedInt
  createdAt             DateTime                 @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt             DateTime?                @updatedAt @map("updated_at") @db.DateTime(0)
  status                String                   @default("on") @db.VarChar(45)
  evolutionEnds         evolution[]              @relation("EvolutionEnd")
  evolutionStarts       evolution[]              @relation("EvolutionStart")
  nationnalNumbers      nationnal_number[]
  ownedPokemons         owned_pokemon[]
  pokemon_category      pokemon_category         @relation(fields: [pokemonCategoryId], references: [id])
  generation            generation               @relation(fields: [generationId], references: [id])
  pokemonInfos          pokemon_info[]
  pokemonRatingGames    pokemon_rating_game[]
  skillObtations        skill_obtation[]
  statistiqueGroupGames statistique_group_game[]

  @@index([pokemonCategoryId], map: "pokemon_category_id_fkey")
  @@index([generationId], map: "pokemon_generation_id_fkey")
}

model owned_pokemon {
  id                  BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  shasseId            BigInt                 @map("shasse_id") @db.UnsignedBigInt
  userId              Int                    @map("user_id") @db.UnsignedInt
  pokemonId           Int                    @map("pokemon_id") @db.UnsignedInt
  gameId              Int                    @map("game_id") @db.UnsignedInt
  createdAt           DateTime               @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt           DateTime?              @updatedAt @map("updated_at") @db.DateTime(0)
  status              String                 @default("on") @db.VarChar(45)
  game                game                   @relation(fields: [gameId], references: [id])
  pokemon             pokemon                @relation(fields: [pokemonId], references: [id])
  shasse              shasse                 @relation(fields: [shasseId], references: [id])
  user                user                   @relation(fields: [userId], references: [id])
  ownedPokemonDetails owned_pokemon_detail[]

  @@index([gameId], map: "owned_pokemon_game_id_fkey")
  @@index([pokemonId], map: "owned_pokemon_pokemon_id_fkey")
  @@index([shasseId], map: "owned_pokemon_shasse_id_fkey")
  @@index([userId], map: "owned_pokemon_user_id_fkey")
}

model owned_pokemon_detail {
  id             BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  nickname       String        @db.VarChar(45)
  isShiny        Boolean       @map("is_shiny")
  pokeballId     Int           @map("pokeball_id") @db.UnsignedInt
  ownedPokemonId BigInt        @map("owned_pokemon") @db.UnsignedBigInt
  createdAt      DateTime      @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime?     @updatedAt @map("updated_at") @db.DateTime(0)
  status         String        @default("on") @db.VarChar(45)
  ownedPokemon   owned_pokemon @relation(fields: [ownedPokemonId], references: [id])
  pokeball       pokeball      @relation(fields: [pokeballId], references: [id])

  @@index([ownedPokemonId], map: "owned_pokemon_detail_owned_pokemon_fkey")
  @@index([pokeballId], map: "owned_pokemon_detail_pokeball_id_fkey")
}

model ability {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  generationId  Int             @map("generation_id") @db.UnsignedInt
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status        String          @default("on") @db.VarChar(45)
  generation    generation      @relation(fields: [generationId], references: [id])
  abilityInfos  ability_info[]
  abilityOrders ability_order[]

  @@index([generationId], map: "ability_generation_id_fkey")
}

model ability_info {
  id           Int        @id @default(autoincrement()) @db.UnsignedInt
  generationId Int        @map("generation_id") @db.UnsignedInt
  abilityId    Int        @map("ability_id") @db.UnsignedInt
  createdAt    DateTime   @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt    DateTime?  @updatedAt @map("updated_at") @db.DateTime(0)
  status       String     @default("on") @db.VarChar(45)
  abilities    ability    @relation(fields: [abilityId], references: [id])
  generation   generation @relation(fields: [generationId], references: [id])

  @@index([abilityId], map: "ability_info_ability_id_fkey")
  @@index([generationId], map: "ability_info_generation_id_fkey")
}

model pokemon_info {
  id             Int               @id @default(autoincrement()) @db.UnsignedInt
  xpGift         Int               @map("xp_gift")
  generationId   Int               @map("generation_id") @db.UnsignedInt
  pokemonId      Int               @map("pokemon_id") @db.UnsignedInt
  createdAt      DateTime          @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime?         @updatedAt @map("updated_at") @db.DateTime(0)
  status         String            @default("on") @db.VarChar(45)
  abilityOrders  ability_order[]
  eggGroupOrders egg_group_order[]
  generation     generation        @relation(fields: [generationId], references: [id])
  pokemon        pokemon           @relation(fields: [pokemonId], references: [id])
  typeOrders     type_order[]

  @@index([generationId], map: "pokemon_info_generation_id_fkey")
  @@index([pokemonId], map: "pokemon_info_pokemon_id_fkey")
}

model ability_order {
  pokemonInfoId Int          @map("pokemon_info_id") @db.UnsignedInt
  abilityId     Int          @map("ability_id") @db.UnsignedInt
  order         Int          @db.UnsignedTinyInt
  isHidden      Boolean      @map("is_hidden")
  ability       ability      @relation(fields: [abilityId], references: [id])
  pokemonInfo   pokemon_info @relation(fields: [pokemonInfoId], references: [id])

  @@id([abilityId, pokemonInfoId])
  @@index([pokemonInfoId], map: "ability_order_pokemon_info_id_fkey")
}

model evolution_method {
  id         Int         @id @default(autoincrement()) @db.UnsignedInt
  createdAt  DateTime    @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt  DateTime?   @updatedAt @map("updated_at") @db.DateTime(0)
  status     String      @default("on") @db.VarChar(45)
  evolutions evolution[]
}

model evolution {
  id                Int              @id @default(autoincrement()) @db.UnsignedInt
  level             Int?
  evolutionMethodId Int              @map("evolution_method") @db.UnsignedInt
  pokemonStartId    Int              @map("pokemon_start_id") @db.UnsignedInt
  pokemonEndId      Int              @map("pokemon_end_id") @db.UnsignedInt
  evolutionInfoId   Int              @map("evolution_info_id") @db.UnsignedInt
  createdAt         DateTime         @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt         DateTime?        @updatedAt @map("updated_at") @db.DateTime(0)
  status            String           @default("on") @db.VarChar(45)
  evolutionInfo     evolution_info   @relation(fields: [evolutionInfoId], references: [id])
  evolutionMethod   evolution_method @relation(fields: [evolutionMethodId], references: [id])
  pokemonEnd        pokemon          @relation("EvolutionEnd", fields: [pokemonEndId], references: [id])
  pokemonStart      pokemon          @relation("EvolutionStart", fields: [pokemonStartId], references: [id])

  @@index([evolutionInfoId], map: "evolution_evolution_info_id_fkey")
  @@index([evolutionMethodId], map: "evolution_evolution_method_fkey")
  @@index([pokemonEndId], map: "evolution_pokemon_end_id_fkey")
  @@index([pokemonStartId], map: "evolution_pokemon_start_id_fkey")
}

model evolution_info {
  id         Int         @id @default(autoincrement()) @db.UnsignedInt
  createdAt  DateTime    @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt  DateTime?   @updatedAt @map("updated_at") @db.DateTime(0)
  status     String      @default("on") @db.VarChar(45)
  evolutions evolution[]
}

model egg_group {
  id             Int               @id @default(autoincrement()) @db.UnsignedInt
  createdAt      DateTime          @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime?         @updatedAt @map("updated_at") @db.DateTime(0)
  status         String            @default("on") @db.VarChar(45)
  eggGroupOrders egg_group_order[]
}

model egg_group_order {
  pokemonInfoId Int          @map("pokemon_info_id") @db.UnsignedInt
  eggGroupId    Int          @map("egg_group_id") @db.UnsignedInt
  order         Int
  eggGroup      egg_group    @relation(fields: [eggGroupId], references: [id])
  pokemonInfo   pokemon_info @relation(fields: [pokemonInfoId], references: [id])

  @@id([eggGroupId, pokemonInfoId])
  @@index([pokemonInfoId], map: "egg_group_order_pokemon_info_id_fkey")
}

model type {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  color         String          @db.Char(7)
  iconName      String          @map("icon_name") @db.VarChar(45)
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status        String          @default("on") @db.VarChar(45)
  capacityTypes capacity_type[]
  typeOrders    type_order[]
}

model type_order {
  typeId        Int          @map("type_id") @db.UnsignedInt
  pokemonInfoId Int          @map("pokemon_info_id") @db.UnsignedInt
  order         Int
  pokemonInfo   pokemon_info @relation(fields: [pokemonInfoId], references: [id])
  type          type         @relation(fields: [typeId], references: [id])

  @@id([typeId, pokemonInfoId])
  @@index([pokemonInfoId], map: "type_order_pokemon_info_id_fkey")
}

model nationnal_number {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  number    Int
  landId    Int       @map("land_id") @db.UnsignedInt
  gameId    Int       @map("game_id") @db.UnsignedInt
  pokemonId Int       @map("pokemon_id") @db.UnsignedInt
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  status    String    @default("on") @db.VarChar(45)
  game      game      @relation(fields: [gameId], references: [id])
  land      land      @relation(fields: [landId], references: [id])
  pokemon   pokemon   @relation(fields: [pokemonId], references: [id])

  @@index([gameId], map: "nationnal_number_game_id_fkey")
  @@index([landId], map: "nationnal_number_land_id_fkey")
  @@index([pokemonId], map: "nationnal_number_pokemon_id_fkey")
}

model land {
  id               Int                @id @default(autoincrement()) @db.UnsignedInt
  createdAt        DateTime           @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt        DateTime?          @updatedAt @map("updated_at") @db.DateTime(0)
  status           String             @default("on") @db.VarChar(45)
  nationnalNumbers nationnal_number[]
}

model capacity {
  id             Int              @id @default(autoincrement()) @db.UnsignedInt
  createdAt      DateTime         @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime?        @updatedAt @map("updated_at") @db.DateTime(0)
  status         String           @default("on") @db.VarChar(45)
  capacityInfos  capacity_info[]
  skillObtations skill_obtation[]
}

model capacity_effect {
  id             Int             @id @default(autoincrement()) @db.UnsignedInt
  zEffect        Boolean         @map("z_effect")
  createdAt      DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status         String          @default("on") @db.VarChar(45)
  capacityInfos  capacity_info[] @relation("capacityEffect")
  capacityZInfos capacity_info[] @relation("capacityEffectZ")
}

model capacity_category {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status        String          @default("on") @db.VarChar(45)
  capacityInfos capacity_info[]
}

model capsule {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status        String          @default("on") @db.VarChar(45)
  capacityInfos capacity_info[]
}

model detail {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  createdAt      DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  status         String    @default("on") @db.VarChar(45)
  conditionRates rate[]    @relation("conditionRate")
  detailRates    rate[]    @relation("detailRate")
}

model effect_without_fight {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status        String          @default("on") @db.VarChar(45)
  capacityInfos capacity_info[]
}

model influence {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status        String          @default("on") @db.VarChar(45)
  capacityInfos capacity_info[]
}

model location {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status        String          @default("on") @db.VarChar(45)
  locationZones location_zone[]
}

model zone {
  id                 Int                   @id @default(autoincrement()) @db.UnsignedInt
  createdAt          DateTime              @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt          DateTime?             @updatedAt @map("updated_at") @db.DateTime(0)
  status             String                @default("on") @db.VarChar(45)
  locationZones      location_zone[]
  pokemonRatingGames pokemon_rating_game[]
}

model location_zone {
  locationId Int      @map("location_id") @db.UnsignedInt
  zoneId     Int      @map("zone_id") @db.UnsignedInt
  location   location @relation(fields: [locationId], references: [id])
  zone       zone     @relation(fields: [zoneId], references: [id])

  @@id([zoneId, locationId])
  @@index([locationId], map: "location_zone_location_id_fkey")
}

model meteo {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  status    String    @default("on") @db.VarChar(45)
  rates     rate[]
}

model pokemon_obtation {
  id                 Int                   @id @default(autoincrement()) @db.UnsignedInt
  createdAt          DateTime              @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt          DateTime?             @updatedAt @map("updated_at") @db.DateTime(0)
  status             String                @default("on") @db.VarChar(45)
  pokemonRatingGames pokemon_rating_game[]
}

model rate {
  id                 Int                   @id @default(autoincrement()) @db.UnsignedInt
  rate               Decimal               @db.Decimal(5, 2)
  minLevel           Int                   @map("min_level") @db.UnsignedSmallInt
  maxLevel           Int                   @map("max_level") @db.UnsignedSmallInt
  limit              Int?                  @db.UnsignedSmallInt
  meteoId            Int                   @map("meteo_id") @db.UnsignedInt
  detailRateId       Int                   @map("detail_rate_id") @db.UnsignedInt
  conditionRateId    Int                   @map("condition_rate_id") @db.UnsignedInt
  createdAt          DateTime              @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt          DateTime?             @updatedAt @map("updated_at") @db.DateTime(0)
  status             String                @default("on") @db.VarChar(45)
  pokemonRatingGames pokemon_rating_game[]
  conditionRate      detail                @relation("conditionRate", fields: [conditionRateId], references: [id])
  detailRate         detail                @relation("detailRate", fields: [detailRateId], references: [id])
  meteo              meteo                 @relation(fields: [meteoId], references: [id])
  shasseMethodRates  shasse_method_rate[]

  @@index([conditionRateId], map: "rate_condition_rate_id_fkey")
  @@index([detailRateId], map: "rate_detail_rate_id_fkey")
  @@index([meteoId], map: "rate_meteo_id_fkey")
}

model shasse_method_game {
  shasseMethodId Int           @map("shasse_method_id") @db.UnsignedInt
  gameId         Int           @map("game_id") @db.UnsignedInt
  game           game          @relation(fields: [gameId], references: [id])
  shasseMethod   shasse_method @relation(fields: [shasseMethodId], references: [id])

  @@id([gameId, shasseMethodId])
  @@index([shasseMethodId], map: "shasse_method_game_shasse_method_id_fkey")
}

model shasse_method_rate {
  shasseMethodId Int           @map("shasse_method_id") @db.UnsignedInt
  rateId         Int           @map("rate_id") @db.UnsignedInt
  rate           rate          @relation(fields: [rateId], references: [id])
  shasseMethod   shasse_method @relation(fields: [shasseMethodId], references: [id])

  @@id([shasseMethodId, rateId])
  @@index([rateId], map: "shasse_method_rate_rate_id_fkey")
}

model skill_obtation_type {
  id             Int              @id @default(autoincrement()) @db.UnsignedInt
  createdAt      DateTime         @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime?        @updatedAt @map("updated_at") @db.DateTime(0)
  status         String           @default("on") @db.VarChar(45)
  skillObtations skill_obtation[]
}

model statistique {
  id                    Int                      @id @default(autoincrement()) @db.UnsignedInt
  pv                    Int                      @db.UnsignedSmallInt
  attack                Int                      @db.UnsignedSmallInt
  defense               Int                      @db.UnsignedSmallInt
  specialAttack         Int?                     @map("special_attack") @db.UnsignedSmallInt
  specialDefense        Int?                     @map("special_defense") @db.UnsignedSmallInt
  special               Int?                     @db.UnsignedSmallInt
  speed                 Int                      @db.UnsignedSmallInt
  createdAt             DateTime                 @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt             DateTime?                @updatedAt @map("updated_at") @db.DateTime(0)
  status                String                   @default("on") @db.VarChar(45)
  statistiqueGroupGames statistique_group_game[]
}

model statistique_group_game {
  gameId        Int         @map("game_id") @db.UnsignedInt
  pokemonId     Int         @map("pokemon_id") @db.UnsignedInt
  statistiqueId Int         @map("statistique_id") @db.UnsignedInt
  game          game        @relation(fields: [gameId], references: [id])
  pokemon       pokemon     @relation(fields: [pokemonId], references: [id])
  statistique   statistique @relation(fields: [statistiqueId], references: [id])

  @@id([pokemonId, gameId])
  @@index([gameId], map: "statistique_group_game_game_id_fkey")
  @@index([statistiqueId], map: "statistique_group_game_statistique_id_fkey")
}

model target {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  isMultiple    Boolean         @map("is_multiple")
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status        String          @default("on") @db.VarChar(45)
  capacityInfos capacity_info[]
}

model capacity_type {
  capacityInfoId Int           @map("capacity_info_id") @db.UnsignedInt
  typeId         Int           @map("type_id") @db.UnsignedInt
  capacityInfo   capacity_info @relation(fields: [capacityInfoId], references: [id])
  type           type          @relation(fields: [typeId], references: [id])

  @@id([typeId, capacityInfoId])
  @@index([capacityInfoId], map: "capacity_type_capacity_info_id_fkey")
}

model capacity_info {
  id                   Int                  @id @default(autoincrement()) @db.UnsignedInt
  power                Int                  @db.UnsignedSmallInt
  dynamaxPower         Int                  @map("dynamax_power") @db.UnsignedSmallInt
  precision            Int                  @db.UnsignedSmallInt
  pp                   Int                  @db.UnsignedSmallInt
  selfDestruct         Boolean              @map("self_destruct")
  hasBacklash          Boolean              @map("has_backlash")
  gameId               Int                  @map("game_id") @db.UnsignedInt
  targetId             Int                  @map("target_id") @db.UnsignedInt
  capacityEffectId     Int                  @map("capacity_effect_id") @db.UnsignedInt
  capacityId           Int                  @map("capacity_id") @db.UnsignedInt
  capacityCategoryId   Int                  @map("capacity_category_id") @db.UnsignedInt
  capacityEffectZId    Int                  @map("capacity_effect_z_id") @db.UnsignedInt
  InfluenceId          Int                  @map("influence_id") @db.UnsignedInt
  effectWithoutFightId Int                  @map("effect_without_fight_id") @db.UnsignedInt
  capsuleId            Int                  @map("capsule_id") @db.UnsignedInt
  createdAt            DateTime             @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt            DateTime?            @updatedAt @map("updated_at") @db.DateTime(0)
  status               String               @default("on") @db.VarChar(45)
  capacityCategory     capacity_category    @relation(fields: [capacityCategoryId], references: [id])
  capacityEffect       capacity_effect      @relation("capacityEffect", fields: [capacityEffectId], references: [id])
  capacityEffectZ      capacity_effect      @relation("capacityEffectZ", fields: [capacityEffectZId], references: [id])
  capacity             capacity             @relation(fields: [capacityId], references: [id])
  capsule              capsule              @relation(fields: [capsuleId], references: [id])
  effectWithoutFight   effect_without_fight @relation(fields: [effectWithoutFightId], references: [id])
  game                 game                 @relation(fields: [gameId], references: [id])
  influence            influence            @relation(fields: [InfluenceId], references: [id])
  target               target               @relation(fields: [targetId], references: [id])
  capacityTypes        capacity_type[]

  @@index([capacityCategoryId], map: "capacity_info_capacity_category_id_fkey")
  @@index([capacityEffectId], map: "capacity_info_capacity_effect_id_fkey")
  @@index([capacityEffectZId], map: "capacity_info_capacity_effect_z_id_fkey")
  @@index([capacityId], map: "capacity_info_capacity_id_fkey")
  @@index([capsuleId], map: "capacity_info_capsule_id_fkey")
  @@index([effectWithoutFightId], map: "capacity_info_effect_without_fight_id_fkey")
  @@index([gameId], map: "capacity_info_game_id_fkey")
  @@index([InfluenceId], map: "capacity_info_influence_id_fkey")
  @@index([targetId], map: "capacity_info_target_id_fkey")
}

model pokemon_rating_game {
  gameId            Int              @map("game_id") @db.UnsignedInt
  rateId            Int              @map("rate_id") @db.UnsignedInt
  zoneId            Int              @map("zone_id") @db.UnsignedInt
  pokemonObtationId Int              @map("pokemon_obtation_id") @db.UnsignedInt
  pokemonId         Int              @map("pokemon_id") @db.UnsignedInt
  game              game             @relation(fields: [gameId], references: [id])
  pokemon           pokemon          @relation(fields: [pokemonId], references: [id])
  pokemonObtation   pokemon_obtation @relation(fields: [pokemonObtationId], references: [id])
  rate              rate             @relation(fields: [rateId], references: [id])
  zone              zone             @relation(fields: [zoneId], references: [id])

  @@id([gameId, rateId, zoneId])
  @@index([pokemonId], map: "pokemon_rating_game_pokemon_id_fkey")
  @@index([pokemonObtationId], map: "pokemon_rating_game_pokemon_obtation_id_fkey")
  @@index([rateId], map: "pokemon_rating_game_rate_id_fkey")
  @@index([zoneId], map: "pokemon_rating_game_zone_id_fkey")
}

model skill_obtation {
  capacityId          Int                 @map("capacity_id") @db.UnsignedInt
  pokemonId           Int                 @map("pokemon_id") @db.UnsignedInt
  gameId              Int                 @map("game_id") @db.UnsignedInt
  skillObtationTypeId Int                 @map("skill_obtation_type_id") @db.UnsignedInt
  level               Int?                @db.UnsignedSmallInt
  capacity            capacity            @relation(fields: [capacityId], references: [id])
  game                game                @relation(fields: [gameId], references: [id])
  pokemon             pokemon             @relation(fields: [pokemonId], references: [id])
  skillObtationType   skill_obtation_type @relation(fields: [skillObtationTypeId], references: [id])

  @@id([pokemonId, gameId, capacityId, skillObtationTypeId])
  @@index([capacityId], map: "skill_obtation_capacity_id_fkey")
  @@index([gameId], map: "skill_obtation_game_id_fkey")
  @@index([skillObtationTypeId], map: "skill_obtation_skill_obtation_type_id_fkey")
}

enum reference_table {
  TYPE
  POKEMON_CATEGORY
  GAME
  POKEMON
  CAPACITY
  CATEGORY_CAPACITY
  INFLUENCE
  SKILL_OBTENTION_TYPE
  CAPSULE
  EFFECT_WITHOUT_FIGHT
  CAPACITY_EFFECT
  TARGET
  POKEMON_OBTENTION
  METEO
  SHASSE_METHOD
  DETAIL_RATE
  POKEBALL
  EGG_GROUP
  EVOLUTION_METHOD
  ZONE
  LOCATION
  LAND
  EVOLUTION_INFO
  ABILITY_INFO_NAME
  ABILITY_INFO_DESCRIPTION
  ABILITY_INFO_EFFECT
}
