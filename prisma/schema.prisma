generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model langue {
  id           Int           @id @default(autoincrement()) @db.UnsignedInt
  name         String        @unique @db.VarChar(100)
  isoCode      String        @unique @map("iso_code") @db.Char(2)
  createdAt    DateTime      @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt    DateTime?     @updatedAt @map("updated_at") @db.DateTime(0)
  status       String        @default("on") @db.VarChar(45)
  users        user[]
  translations translation[]
}

model translation {
  langueId       Int             @map("langue_id") @db.UnsignedInt
  referenceId    BigInt          @map("reference_id") @db.UnsignedBigInt
  referenceTable reference_table @map("reference_table")
  name           String          @db.Text
  createdAt      DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status         String          @default("on") @db.VarChar(45)

  langue langue @relation(fields: [langueId], references: [id])

  @@id([referenceTable, referenceId, langueId])
}

model user {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  discordId     BigInt?         @map("discord_id") @db.UnsignedBigInt
  email         String          @unique @db.VarChar(255)
  username      String          @db.VarChar(100)
  password      String          @db.VarChar(255)
  lastConnexion DateTime        @map("last_connexion") @db.DateTime(0)
  langueId      Int             @map("langue_id") @db.UnsignedInt
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status        String          @default("on") @db.VarChar(45)
  ownedPokemons owned_pokemon[]
  roleUsers     role_user[]
  refreshTokens refresh_token[]
  langues       langue          @relation(fields: [langueId], references: [id])

  @@index([langueId], map: "user_langue_id_fkey")
}

model role {
  id          Int         @id @default(autoincrement()) @db.UnsignedInt
  name        String      @unique @db.VarChar(45)
  levelAccess Int         @map("level_access")
  createdAt   DateTime    @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt   DateTime?   @updatedAt @map("updated_at") @db.DateTime(0)
  status      String      @default("on") @db.VarChar(45)
  roleUsers   role_user[]
}

model role_user {
  roleId Int  @map("role_id") @db.UnsignedInt
  userId Int  @map("user_id") @db.UnsignedInt
  role   role @relation(fields: [roleId], references: [id])
  user   user @relation(fields: [userId], references: [id])

  @@id([roleId, userId])
  @@index([userId], map: "role_user_user_id_fkey")
}

model shiny_hunting_method {
  id                      Int                         @id @default(autoincrement()) @db.UnsignedInt
  createdAt               DateTime                    @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt               DateTime?                   @updatedAt @map("updated_at") @db.DateTime(0)
  status                  String                      @default("on") @db.VarChar(45)
  shinyHuntings           shiny_hunting[]
  shinyHuntingMethodGames shiny_hunting_method_game[]
  shinyHuntingMethodRates shiny_hunting_method_rate[]
}

model shiny_hunting {
  id                 BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  methodId           Int                  @map("method_id") @db.UnsignedInt
  meetingNumber      Int                  @map("meeting_number") @db.UnsignedInt
  time               DateTime             @db.Time(0)
  isFinish           Boolean              @map("is_finish")
  useCharmChroma     Boolean              @map("use_charm_chroma")
  createdAt          DateTime             @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt          DateTime?            @updatedAt @map("updated_at") @db.DateTime(0)
  status             String               @default("on") @db.VarChar(45)
  ownedPokemons      owned_pokemon[]
  shinyHuntingMethod shiny_hunting_method @relation(fields: [methodId], references: [id])

  @@index([methodId], map: "shiny_hunting_method_id_fkey")
}

model pokeball {
  id                  Int                    @id @default(autoincrement()) @db.UnsignedInt
  picture             String                 @db.VarChar(45)
  createdAt           DateTime               @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt           DateTime?              @updatedAt @map("updated_at") @db.DateTime(0)
  status              String                 @default("on") @db.VarChar(45)
  ownedPokemonDetails owned_pokemon_detail[]
}

model generation {
  id           Int            @id @db.UnsignedInt
  createdAt    DateTime       @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt    DateTime?      @updatedAt @map("updated_at") @db.DateTime(0)
  status       String         @default("on") @db.VarChar(45)
  abilities    ability[]
  abilityInfos ability_info[]
  games        game[]
  pokemons     pokemon[]
  pokemonInfos pokemon_info[]
}

model game {
  id                 Int                     @id @default(autoincrement()) @db.UnsignedInt
  generationId       Int                     @map("generation_id") @db.UnsignedInt
  createdAt          DateTime                @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt          DateTime?               @updatedAt @map("updated_at") @db.DateTime(0)
  status             String                  @default("on") @db.VarChar(45)
  generation         generation              @relation(fields: [generationId], references: [id])
  ownedPokemons      owned_pokemon[]
  pokemonRatingGames pokemon_game_location[]
  gameGroupGames     game_group_game[]

  @@index([generationId], map: "game_generation_id_fkey")
}

model game_group_game {
  gameId      Int @map("game_id") @db.UnsignedInt
  groupGameId Int @map("group_game_id") @db.UnsignedInt
  landId      Int @map("land_id") @db.UnsignedInt

  land      land       @relation(fields: [landId], references: [id])
  game      game       @relation(fields: [gameId], references: [id])
  groupGame group_game @relation(fields: [groupGameId], references: [id])

  @@id([gameId, groupGameId, landId])
}

model group_game {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  status    String    @default("on") @db.VarChar(45)

  gameGroupGames            game_group_game[]
  nationnalNumbers          national_number[]
  shinyHuntingMethodGames   shiny_hunting_method_game[]
  skillObtations            skill_obtation[]
  statisticGroupGames       statistic_group_game[]
  capsuleGameCapacityIinfos capsule_game_capacity_info[]
}

model capsule_game_capacity_info {
  capacityInfoId Int @map("capacity_info_id") @db.UnsignedInt
  capsuleId      Int @map("capsule_id") @db.UnsignedInt
  groupeGameId   Int @map("groupe_game_id") @db.UnsignedInt

  groupGame    group_game    @relation(fields: [groupeGameId], references: [id])
  capsule      capsule       @relation(fields: [capsuleId], references: [id])
  capacityInfo capacity_info @relation(fields: [capacityInfoId], references: [id])

  @@id([capacityInfoId, groupeGameId])
}

model pokemon_category {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  status    String    @default("on") @db.VarChar(45)
  pokemons  pokemon[]
}

model pokemon {
  id                  Int                    @id @default(autoincrement()) @db.UnsignedInt
  internationalNumber Int                    @map("international_number")
  hatchingCycle       Int                    @map("hatching_cycle")
  globalXp            Int                    @map("global_xp")
  captureRate         Int                    @map("capture_rate")
  callHelpRate        Int                    @map("call_help_rate")
  size                Decimal                @db.Decimal(5, 2)
  weight              Decimal                @db.Decimal(5, 2)
  maleRate            Decimal                @map("male_rate") @db.Decimal(5, 2)
  femelleRate         Decimal                @map("femelle_rate") @db.Decimal(5, 2)
  pokemonCategoryId   Int                    @map("category_id") @db.UnsignedInt
  generationId        Int                    @map("generation_id") @db.UnsignedInt
  createdAt           DateTime               @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt           DateTime?              @updatedAt @map("updated_at") @db.DateTime(0)
  status              String                 @default("on") @db.VarChar(45)
  nationalNumbers     national_number[]
  ownedPokemons       owned_pokemon[]
  pokemon_category    pokemon_category       @relation(fields: [pokemonCategoryId], references: [id])
  generation          generation             @relation(fields: [generationId], references: [id])
  pokemonInfos        pokemon_info[]
  skillObtations      skill_obtation[]
  statisticGroupGames statistic_group_game[]
  pokemonForms        pokemon_form[]

  @@index([pokemonCategoryId], map: "pokemon_category_id_fkey")
  @@index([generationId], map: "pokemon_generation_id_fkey")
}

model gender {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  status    String    @default("on") @db.VarChar(45)

  pokemonFormGenders pokemon_form_gender[]
}

model form {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  status    String    @default("on") @db.VarChar(45)

  pokemonForms pokemon_form[]
}

model pokemon_form_gender {
  pokemonFormId Int @map("pokemon_form_id") @db.UnsignedInt
  genderId      Int @map("gender_id") @db.UnsignedInt

  gender       gender       @relation(fields: [genderId], references: [id])
  pokemon_form pokemon_form @relation(fields: [pokemonFormId], references: [id])

  @@id([genderId, pokemonFormId])
}

model pokemon_form {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  pokemonId Int       @map("pokemon_id") @db.UnsignedInt
  formId    Int       @map("form_id") @db.UnsignedInt
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  status    String    @default("on") @db.VarChar(45)

  pokemon pokemon @relation(fields: [pokemonId], references: [id])
  form    form    @relation(fields: [formId], references: [id])

  pokemonFormGenders pokemon_form_gender[]
  pokemonRatingGames pokemon_game_location[]
  evolutionEnds      evolution[]             @relation("EvolutionEnd")
  evolutionStarts    evolution[]             @relation("EvolutionStart")

  @@unique([pokemonId, formId])
}

model owned_pokemon {
  id                  BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  shinyHuntingId      BigInt                 @map("shiny_hunting_id") @db.UnsignedBigInt
  userId              Int                    @map("user_id") @db.UnsignedInt
  pokemonId           Int                    @map("pokemon_id") @db.UnsignedInt
  gameId              Int                    @map("game_id") @db.UnsignedInt
  createdAt           DateTime               @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt           DateTime?              @updatedAt @map("updated_at") @db.DateTime(0)
  status              String                 @default("on") @db.VarChar(45)
  game                game                   @relation(fields: [gameId], references: [id])
  pokemon             pokemon                @relation(fields: [pokemonId], references: [id])
  shiny_hunting       shiny_hunting          @relation(fields: [shinyHuntingId], references: [id])
  user                user                   @relation(fields: [userId], references: [id])
  ownedPokemonDetails owned_pokemon_detail[]

  @@index([gameId], map: "owned_pokemon_game_id_fkey")
  @@index([pokemonId], map: "owned_pokemon_pokemon_id_fkey")
  @@index([shinyHuntingId], map: "owned_pokemon_shiny_hunting_id_fkey")
  @@index([userId], map: "owned_pokemon_user_id_fkey")
}

model owned_pokemon_detail {
  id             BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  nickname       String        @db.VarChar(45)
  isShiny        Boolean       @map("is_shiny")
  pokeballId     Int           @map("pokeball_id") @db.UnsignedInt
  ownedPokemonId BigInt        @map("owned_pokemon") @db.UnsignedBigInt
  createdAt      DateTime      @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime?     @updatedAt @map("updated_at") @db.DateTime(0)
  status         String        @default("on") @db.VarChar(45)
  ownedPokemon   owned_pokemon @relation(fields: [ownedPokemonId], references: [id])
  pokeball       pokeball      @relation(fields: [pokeballId], references: [id])

  @@index([ownedPokemonId], map: "owned_pokemon_detail_owned_pokemon_fkey")
  @@index([pokeballId], map: "owned_pokemon_detail_pokeball_id_fkey")
}

model ability {
  id                     Int             @id @default(autoincrement()) @db.UnsignedInt
  appearanceGenerationId Int             @map("appearance_generation_id") @db.UnsignedInt
  createdAt              DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt              DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status                 String          @default("on") @db.VarChar(45)
  generation             generation      @relation(fields: [appearanceGenerationId], references: [id])
  abilityInfos           ability_info[]
  abilityOrders          ability_order[]

  @@index([appearanceGenerationId], map: "ability_generation_id_fkey")
}

model ability_info {
  id                   Int @id @default(autoincrement()) @db.UnsignedInt
  generationId         Int @map("generation_id") @db.UnsignedInt
  abilityId            Int @map("ability_id") @db.UnsignedInt
  effectOutsideFightId Int @map("effect_outside_fight_id") @db.UnsignedInt

  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  status    String    @default("on") @db.VarChar(45)

  abilities          ability              @relation(fields: [abilityId], references: [id])
  generation         generation           @relation(fields: [generationId], references: [id])
  effectWithoutFight effect_outside_fight @relation(fields: [effectOutsideFightId], references: [id])

  @@index([abilityId], map: "ability_info_ability_id_fkey")
  @@index([generationId], map: "ability_info_generation_id_fkey")
}

model pokemon_info {
  id             Int               @id @default(autoincrement()) @db.UnsignedInt
  xpGift         Int               @map("xp_gift")
  generationId   Int               @map("generation_id") @db.UnsignedInt
  pokemonId      Int               @map("pokemon_id") @db.UnsignedInt
  createdAt      DateTime          @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime?         @updatedAt @map("updated_at") @db.DateTime(0)
  status         String            @default("on") @db.VarChar(45)
  abilityOrders  ability_order[]
  eggGroupOrders egg_group_order[]
  generation     generation        @relation(fields: [generationId], references: [id])
  pokemon        pokemon           @relation(fields: [pokemonId], references: [id])
  typeOrders     type_order[]

  @@index([generationId], map: "pokemon_info_generation_id_fkey")
  @@index([pokemonId], map: "pokemon_info_pokemon_id_fkey")
}

model ability_order {
  pokemonInfoId Int          @map("pokemon_info_id") @db.UnsignedInt
  abilityId     Int          @map("ability_id") @db.UnsignedInt
  order         Int          @db.UnsignedTinyInt
  isHidden      Boolean      @map("is_hidden")
  ability       ability      @relation(fields: [abilityId], references: [id])
  pokemonInfo   pokemon_info @relation(fields: [pokemonInfoId], references: [id])

  @@id([abilityId, pokemonInfoId])
  @@index([pokemonInfoId], map: "ability_order_pokemon_info_id_fkey")
}

model evolution_method {
  id         Int         @id @default(autoincrement()) @db.UnsignedInt
  createdAt  DateTime    @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt  DateTime?   @updatedAt @map("updated_at") @db.DateTime(0)
  status     String      @default("on") @db.VarChar(45)
  evolutions evolution[]
}

model evolution {
  id                 Int              @id @default(autoincrement()) @db.UnsignedInt
  level              Int?
  evolutionMethodId  Int              @map("evolution_method") @db.UnsignedInt
  pokemonFormStartId Int              @map("pokemon_start_id") @db.UnsignedInt
  pokemonFormEndId   Int              @map("pokemon_end_id") @db.UnsignedInt
  evolutionInfoId    Int              @map("evolution_info_id") @db.UnsignedInt
  createdAt          DateTime         @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt          DateTime?        @updatedAt @map("updated_at") @db.DateTime(0)
  status             String           @default("on") @db.VarChar(45)
  evolutionInfo      evolution_info   @relation(fields: [evolutionInfoId], references: [id])
  evolutionMethod    evolution_method @relation(fields: [evolutionMethodId], references: [id])
  pokemonEnd         pokemon_form     @relation("EvolutionEnd", fields: [pokemonFormEndId], references: [id])
  pokemonStart       pokemon_form     @relation("EvolutionStart", fields: [pokemonFormStartId], references: [id])

  @@index([evolutionInfoId], map: "evolution_evolution_info_id_fkey")
  @@index([evolutionMethodId], map: "evolution_evolution_method_fkey")
  @@index([pokemonFormEndId], map: "evolution_pokemon_form_end_id_fkey")
  @@index([pokemonFormStartId], map: "evolution_pokemon_form_start_id_fkey")
}

model evolution_info {
  id         Int         @id @default(autoincrement()) @db.UnsignedInt
  createdAt  DateTime    @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt  DateTime?   @updatedAt @map("updated_at") @db.DateTime(0)
  status     String      @default("on") @db.VarChar(45)
  evolutions evolution[]
}

model egg_group {
  id             Int               @id @default(autoincrement()) @db.UnsignedInt
  createdAt      DateTime          @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime?         @updatedAt @map("updated_at") @db.DateTime(0)
  status         String            @default("on") @db.VarChar(45)
  eggGroupOrders egg_group_order[]
}

model egg_group_order {
  pokemonInfoId Int          @map("pokemon_info_id") @db.UnsignedInt
  eggGroupId    Int          @map("egg_group_id") @db.UnsignedInt
  order         Int
  eggGroup      egg_group    @relation(fields: [eggGroupId], references: [id])
  pokemonInfo   pokemon_info @relation(fields: [pokemonInfoId], references: [id])

  @@id([eggGroupId, pokemonInfoId])
  @@index([pokemonInfoId], map: "egg_group_order_pokemon_info_id_fkey")
}

model type {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  color         String          @db.Char(7)
  iconName      String          @map("icon_name") @db.VarChar(45)
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status        String          @default("on") @db.VarChar(45)
  typeOrders    type_order[]
  capacityInfos capacity_info[]
}

model type_order {
  typeId        Int          @map("type_id") @db.UnsignedInt
  pokemonInfoId Int          @map("pokemon_info_id") @db.UnsignedInt
  order         Int
  pokemonInfo   pokemon_info @relation(fields: [pokemonInfoId], references: [id])
  type          type         @relation(fields: [typeId], references: [id])

  @@id([typeId, pokemonInfoId])
  @@index([pokemonInfoId], map: "type_order_pokemon_info_id_fkey")
}

model national_number {
  groupGameId Int        @map("group_game_id") @db.UnsignedInt
  pokemonId   Int        @map("pokemon_id") @db.UnsignedInt
  number      Int
  groupGame   group_game @relation(fields: [groupGameId], references: [id])
  pokemon     pokemon    @relation(fields: [pokemonId], references: [id])

  @@id([pokemonId, groupGameId])
}

model land {
  id              Int               @id @default(autoincrement()) @db.UnsignedInt
  createdAt       DateTime          @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt       DateTime?         @updatedAt @map("updated_at") @db.DateTime(0)
  status          String            @default("on") @db.VarChar(45)
  game_group_game game_group_game[]
}

model capacity {
  id             Int              @id @default(autoincrement()) @db.UnsignedInt
  createdAt      DateTime         @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime?        @updatedAt @map("updated_at") @db.DateTime(0)
  status         String           @default("on") @db.VarChar(45)
  capacityInfos  capacity_info[]
  skillObtations skill_obtation[]
}

model capacity_effect {
  id             Int             @id @default(autoincrement()) @db.UnsignedInt
  zEffect        Boolean         @map("z_effect")
  createdAt      DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status         String          @default("on") @db.VarChar(45)
  capacityInfos  capacity_info[] @relation("capacityEffect")
  capacityZInfos capacity_info[] @relation("capacityEffectZ")
}

model capacity_category {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  status    String    @default("on") @db.VarChar(45)

  capacityInfos capacity_info[]
}

model capsule {
  id                         Int                          @id @default(autoincrement()) @db.UnsignedInt
  createdAt                  DateTime                     @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt                  DateTime?                    @updatedAt @map("updated_at") @db.DateTime(0)
  status                     String                       @default("on") @db.VarChar(45)
  capsule_game_capacity_info capsule_game_capacity_info[]
}

model detail {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  createdAt      DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  status         String    @default("on") @db.VarChar(45)
  conditionRates rate[]    @relation("conditionRate")
  detailRates    rate[]    @relation("detailRate")
}

model effect_outside_fight {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  status    String    @default("on") @db.VarChar(45)

  abilityInfos  ability_info[]
  capacityInfos capacity_info[]
}

model influence {
  id                     Int                       @id @default(autoincrement()) @db.UnsignedInt
  createdAt              DateTime                  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt              DateTime?                 @updatedAt @map("updated_at") @db.DateTime(0)
  status                 String                    @default("on") @db.VarChar(45)
  capacityInfoInfluences capacity_info_influence[]
}

model location {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status        String          @default("on") @db.VarChar(45)
  locationZones location_zone[]
}

model zone {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status        String          @default("on") @db.VarChar(45)
  locationZones location_zone[]
}

model location_zone {
  id                 Int                     @id @default(autoincrement()) @db.UnsignedInt
  locationId         Int                     @map("location_id") @db.UnsignedInt
  zoneId             Int                     @map("zone_id") @db.UnsignedInt
  location           location                @relation(fields: [locationId], references: [id])
  zone               zone                    @relation(fields: [zoneId], references: [id])
  createdAt          DateTime                @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt          DateTime?               @updatedAt @map("updated_at") @db.DateTime(0)
  status             String                  @default("on") @db.VarChar(45)
  pokemonRatingGames pokemon_game_location[]

  @@unique([locationId, zoneId])
  @@index([locationId], map: "location_zone_location_id_fkey")
  @@index([zoneId], map: "location_zone_zone_id_fkey")
}

model meteo {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  status    String    @default("on") @db.VarChar(45)
  rates     rate[]
}

model pokemon_obtation {
  id                 Int                     @id @default(autoincrement()) @db.UnsignedInt
  createdAt          DateTime                @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt          DateTime?               @updatedAt @map("updated_at") @db.DateTime(0)
  status             String                  @default("on") @db.VarChar(45)
  pokemonRatingGames pokemon_game_location[]
}

model rate {
  id                      Int                         @id @default(autoincrement()) @db.UnsignedInt
  rate                    Decimal                     @db.Decimal(5, 2)
  minLevel                Int                         @map("min_level") @db.UnsignedSmallInt
  maxLevel                Int                         @map("max_level") @db.UnsignedSmallInt
  limit                   Int?                        @db.UnsignedSmallInt
  meteoId                 Int                         @map("meteo_id") @db.UnsignedInt
  detailRateId            Int                         @map("detail_rate_id") @db.UnsignedInt
  conditionRateId         Int                         @map("condition_rate_id") @db.UnsignedInt
  isAlpha                 Boolean                     @map("is_alpha")
  createdAt               DateTime                    @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt               DateTime?                   @updatedAt @map("updated_at") @db.DateTime(0)
  status                  String                      @default("on") @db.VarChar(45)
  pokemonRatingGames      pokemon_game_location[]
  conditionRate           detail                      @relation("conditionRate", fields: [conditionRateId], references: [id])
  detailRate              detail                      @relation("detailRate", fields: [detailRateId], references: [id])
  meteo                   meteo                       @relation(fields: [meteoId], references: [id])
  shinyHuntingMethodRates shiny_hunting_method_rate[]

  @@index([conditionRateId], map: "rate_condition_rate_id_fkey")
  @@index([detailRateId], map: "rate_detail_rate_id_fkey")
  @@index([meteoId], map: "rate_meteo_id_fkey")
}

model shiny_hunting_method_game {
  shinyHuntingMethodId Int                  @map("shiny_hunting_method_id") @db.UnsignedInt
  groupGameId          Int                  @map("group_game_id") @db.UnsignedInt
  groupGame            group_game           @relation(fields: [groupGameId], references: [id])
  shinyHuntingMethod   shiny_hunting_method @relation(fields: [shinyHuntingMethodId], references: [id])

  @@id([groupGameId, shinyHuntingMethodId])
  @@index([shinyHuntingMethodId], map: "shiny_hunting_method_game_shiny_hunting_method_id_fkey")
}

model shiny_hunting_method_rate {
  shinyHuntingMethodId Int                  @map("shiny_hunting_method_id") @db.UnsignedInt
  rateId               Int                  @map("rate_id") @db.UnsignedInt
  rate                 rate                 @relation(fields: [rateId], references: [id])
  shinyHuntingMethod   shiny_hunting_method @relation(fields: [shinyHuntingMethodId], references: [id])

  @@id([shinyHuntingMethodId, rateId])
  @@index([rateId], map: "shiny_hunting_method_rate_rate_id_fkey")
}

model skill_obtation_type {
  id             Int              @id @default(autoincrement()) @db.UnsignedInt
  createdAt      DateTime         @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime?        @updatedAt @map("updated_at") @db.DateTime(0)
  status         String           @default("on") @db.VarChar(45)
  skillObtations skill_obtation[]
}

model statistic {
  id                  Int                    @id @default(autoincrement()) @db.UnsignedInt
  pv                  Int                    @db.UnsignedSmallInt
  attack              Int                    @db.UnsignedSmallInt
  defense             Int                    @db.UnsignedSmallInt
  specialAttack       Int?                   @map("special_attack") @db.UnsignedSmallInt
  specialDefense      Int?                   @map("special_defense") @db.UnsignedSmallInt
  special             Int?                   @db.UnsignedSmallInt
  speed               Int                    @db.UnsignedSmallInt
  createdAt           DateTime               @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt           DateTime?              @updatedAt @map("updated_at") @db.DateTime(0)
  status              String                 @default("on") @db.VarChar(45)
  statisticGroupGames statistic_group_game[]
}

model statistic_group_game {
  groupGameId Int        @map("group_game_id") @db.UnsignedInt
  pokemonId   Int        @map("pokemon_id") @db.UnsignedInt
  statisticId Int        @map("statistic_id") @db.UnsignedInt
  groupGame   group_game @relation(fields: [groupGameId], references: [id])
  pokemon     pokemon    @relation(fields: [pokemonId], references: [id])
  statistic   statistic  @relation(fields: [statisticId], references: [id])

  @@id([pokemonId, groupGameId])
  @@index([statisticId], map: "statistic_group_game_statistic_id_fkey")
}

model target {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  isMultiple    Boolean         @map("is_multiple")
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  status        String          @default("on") @db.VarChar(45)
  capacityInfos capacity_info[]
}

model capacity_info {
  id                       Int                          @id @default(autoincrement()) @db.UnsignedInt
  power                    Int                          @db.SmallInt
  dynamaxPower             Int                          @map("dynamax_power") @db.SmallInt
  precision                Int                          @db.SmallInt
  pp                       Int                          @db.UnsignedSmallInt
  hasBacklash              Boolean                      @map("has_backlash")
  targetId                 Int                          @map("target_id") @db.UnsignedInt
  capacityEffectId         Int                          @map("capacity_effect_id") @db.UnsignedInt
  capacityId               Int                          @map("capacity_id") @db.UnsignedInt
  capacityEffectZId        Int                          @map("capacity_effect_z_id") @db.UnsignedInt
  typeId                   Int                          @map("type_id") @db.UnsignedInt
  effectOutsideFightId     Int                          @map("effect_outside_fight_id") @db.UnsignedInt
  capacityCategoryId       Int                          @map("capacity_category_id") @db.UnsignedInt
  createdAt                DateTime                     @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt                DateTime?                    @updatedAt @map("updated_at") @db.DateTime(0)
  status                   String                       @default("on") @db.VarChar(45)
  capacityEffect           capacity_effect              @relation("capacityEffect", fields: [capacityEffectId], references: [id])
  capacityEffectZ          capacity_effect              @relation("capacityEffectZ", fields: [capacityEffectZId], references: [id])
  capacity                 capacity                     @relation(fields: [capacityId], references: [id])
  target                   target                       @relation(fields: [targetId], references: [id])
  type                     type                         @relation(fields: [typeId], references: [id])
  effectOutsideFight       effect_outside_fight         @relation(fields: [effectOutsideFightId], references: [id])
  capacityCategory         capacity_category            @relation(fields: [capacityCategoryId], references: [id])
  capsuleGameCapacityInfos capsule_game_capacity_info[]
  capacityInfoInfluences   capacity_info_influence[]

  @@index([capacityEffectId], map: "capacity_info_capacity_effect_id_fkey")
  @@index([capacityEffectZId], map: "capacity_info_capacity_effect_z_id_fkey")
  @@index([capacityId], map: "capacity_info_capacity_id_fkey")
  @@index([targetId], map: "capacity_info_target_id_fkey")
  @@index([typeId], map: "capacity_info_type_id_fkey")
}

model capacity_info_influence {
  capacityInfoId Int @map("capacity_info") @db.UnsignedInt
  influenceId    Int @db.UnsignedInt

  influence    influence     @relation(fields: [influenceId], references: [id])
  capacityInfo capacity_info @relation(fields: [capacityInfoId], references: [id])

  @@id([capacityInfoId, influenceId])
}

model pokemon_game_location {
  id                Int              @id @default(autoincrement()) @db.UnsignedInt
  gameId            Int              @map("game_id") @db.UnsignedInt
  rateId            Int              @map("rate_id") @db.UnsignedInt
  locationZoneId    Int              @map("location_zone_id") @db.UnsignedInt
  pokemonObtationId Int              @map("pokemon_obtation_id") @db.UnsignedInt
  pokemonFormId     Int              @map("pokemon_id") @db.UnsignedInt
  game              game             @relation(fields: [gameId], references: [id])
  pokemonForm       pokemon_form     @relation(fields: [pokemonFormId], references: [id])
  pokemonObtation   pokemon_obtation @relation(fields: [pokemonObtationId], references: [id])
  rate              rate             @relation(fields: [rateId], references: [id])
  locationZone      location_zone    @relation(fields: [locationZoneId], references: [id])

  @@unique([gameId, rateId, locationZoneId, pokemonFormId, pokemonObtationId])
  @@index([pokemonFormId], map: "pokemon_rating_game_pokemon_form_id_fkey")
  @@index([pokemonObtationId], map: "pokemon_rating_game_pokemon_obtation_id_fkey")
  @@index([rateId], map: "pokemon_rating_game_rate_id_fkey")
  @@index([locationZoneId], map: "pokemon_rating_game_location_zone_id_fkey")
}

model skill_obtation {
  capacityId          Int                 @map("capacity_id") @db.UnsignedInt
  pokemonId           Int                 @map("pokemon_id") @db.UnsignedInt
  groupGameId         Int                 @map("group_game_id") @db.UnsignedInt
  skillObtationTypeId Int                 @map("skill_obtation_type_id") @db.UnsignedInt
  detail              String              @db.VarChar(255)
  capacity            capacity            @relation(fields: [capacityId], references: [id])
  groupGame           group_game          @relation(fields: [groupGameId], references: [id])
  pokemon             pokemon             @relation(fields: [pokemonId], references: [id])
  skillObtationType   skill_obtation_type @relation(fields: [skillObtationTypeId], references: [id])

  @@id([pokemonId, groupGameId, capacityId, skillObtationTypeId, detail])
  @@index([capacityId], map: "skill_obtation_capacity_id_fkey")
  @@index([skillObtationTypeId], map: "skill_obtation_skill_obtation_type_id_fkey")
}

model refresh_token {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  userId    Int      @map("user_id") @db.UnsignedInt
  token     String   @unique @db.VarChar(255)
  expiresAt DateTime @map("expires_at") @db.Timestamp()

  users user @relation(references: [id], fields: [userId])
}

enum reference_table {
  TYPE
  POKEMON_CATEGORY
  GAME
  POKEMON
  CAPACITY
  CATEGORY_CAPACITY
  INFLUENCE
  SKILL_OBTENTION_TYPE
  CAPSULE
  EFFECT_OUTSIDE_FIGHT
  CAPACITY_EFFECT
  TARGET
  POKEMON_OBTENTION
  METEO
  SHINY_HUNTING_METHOD
  DETAIL
  POKEBALL
  EGG_GROUP
  EVOLUTION_METHOD
  ZONE
  LOCATION
  LAND
  EVOLUTION_INFO
  ABILITY
  GROUP_GAME
  FORM
  GENDER
}
